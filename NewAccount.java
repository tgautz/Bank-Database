/*
 * New Account opens a new account with the bank for a customer already existing in the CUSTOMER relation
 */
package database;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class NewAccount extends javax.swing.JFrame {

    //global variable from constructor
    private Statement stmt;
    
    public NewAccount(Statement stmt) {
        initComponents();
        this.stmt = stmt;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "SSN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Checking", "Savings" }));
        jComboBox1.setSelectedIndex(1);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField1.setText("Interest Rate");

        jButton1.setText("Create Account");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //Checking/Savings combo box selection alters whether 
        //interest rate text field is visible or not
        if(jComboBox1.getSelectedIndex()==0)
            jTextField1.setVisible(false);
        else
            jTextField1.setVisible(true);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Create Account button is pressed
        //initialize interest rate to null
        String interestRate = "NULL";
        //if this is a savings account, get interest rate
        if(jComboBox1.getSelectedIndex()==1)
        {
            try {
                //error checking -- is interest rate a number?
                Double.parseDouble(jTextField1.getText());
                interestRate = jTextField1.getText();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR: interest rate must be a number");//throw error
                return;
            }
        }
        //initialize local variables
        ResultSet rs;
        int nextAccountID = -1;
        try {
            //execute query, to get next available account number
            rs = stmt.executeQuery("SELECT MAX(ID) " +
                                   "FROM ACCOUNT;");
            //if there is no next avvailable, kill this object
            if(!rs.next())
            {
                this.setVisible(false);
                return;
            }
            //else, set next available account number
            nextAccountID = rs.getInt(1)+1;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERROR: query1 failed");
            return;
        }
        boolean accountCreatedAlready = false; //flag
        //check all cells in SSN table for values
        for(int i=0; i<jTable1.getRowCount(); i++)
        {
            //if cell is not blank
            if(jTable1.getValueAt(i, 0) != null)
            {
                try {
                    //see if the person's SSN exists in the CUSTOMER relation
                    rs = stmt.executeQuery("SELECT SSN " +
                                           "FROM CUSTOMER " +
                                           "WHERE SSN='"+jTable1.getValueAt(i, 0)+"';");
                    //if it exists,
                    if(rs.next())
                    {
                        //create an account if this is the first SSN to be entered
                        if(!accountCreatedAlready)
                        {
                            //delcare SQL statement and execute
                            String sql = "INSERT INTO ACCOUNT (ID, Balance, Interest_rate) " +
                                         "VALUES ("+nextAccountID+", "+ //ID
                                                  "0.00, "+ //starting balance
                                                  interestRate+");"; //interest rate
                            stmt.executeUpdate(sql);
                            //if no exception thrown, give account id #
                            JOptionPane.showMessageDialog(null, "Account created with id: "+nextAccountID);
                            //set flag
                            accountCreatedAlready = true;
                        }
                        //add authorization to access this new account to the SSNs provided
                        String ssn = jTable1.getValueAt(i, 0).toString();
                        String sql = "INSERT INTO ACCOUNT_AUTHORIZATION (ID, CSSN) " +
                                     "VALUES ("+nextAccountID+", "+ //ID
                                              ssn+");"; //Customer SSN
                        stmt.executeUpdate(sql);   
                        //close this window when done
                        this.setVisible(false);
                    }
                    //show various possible errors
                    else
                        JOptionPane.showMessageDialog(null, "ERROR: Customer doesn't exist");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "ERROR: query2 failed");
                    return;
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new NewAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
